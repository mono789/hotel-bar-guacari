{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\estra\\\\OneDrive\\\\Escritorio\\\\Hotel\\\\hotel-bar-guacari\\\\frontend\\\\src\\\\screens\\\\user\\\\ProfileScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Modal from \"react-modal\";\nimport axios from \"axios\";\n\n/* Components */\nimport HeaderContent from \"../../components/HeaderContent\";\nimport Input from \"../../components/form/Input\";\nimport ModalButton from \"../../components/ModalButton\";\nimport FileInput from \"../../components/form/FileInput\";\nimport DataTableLoader from \"../../components/loader/DataTableLoader\";\nimport LoaderHandler from \"../../components/loader/LoaderHandler\";\n\n/* Constants */\nimport { USER_DETAILS_RESET, USER_LOGOUT, USER_UPDATE_RESET } from \"../../constants/userConstants\";\n\n/* Actions */\nimport { listUserDetails, login, updateProfile } from \"../../actions/userActions\";\n\n/* Styles */\nimport { modalStyles } from \"../../utils/styles\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ProfileScreen = ({\n  history\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [passwordCheck, setPasswordCheck] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [uploading, setUploading] = useState(false);\n  const [modal, setModal] = useState(false);\n  const [errors, setErrors] = useState({});\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n\n  //user details state\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    loading,\n    error,\n    user\n  } = userDetails;\n\n  //user update state\n  const userUpdate = useSelector(state => state.userUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate\n  } = userUpdate;\n  useEffect(() => {\n    //after update redirect to users\n    if (successUpdate) {\n      localStorage.removeItem(\"userInfo\");\n      dispatch({\n        type: USER_UPDATE_RESET\n      });\n      dispatch({\n        type: USER_DETAILS_RESET\n      });\n      dispatch({\n        type: USER_LOGOUT\n      });\n      dispatch(login(email, password ? password : passwordCheck));\n      history.push(\"/login\");\n    }\n\n    //load product data\n    if ((!user || !user.name) && userInfo) {\n      dispatch(listUserDetails(userInfo._id));\n    } else {\n      //set states\n      setName(user.name);\n      setEmail(user.email);\n      setImage(user.image);\n    }\n  }, [dispatch, history, user, userInfo, successUpdate]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    let errorsCheck = {};\n    if (!name) {\n      errorsCheck.name = \"Name is required.\";\n    }\n    if (password.length > 0 && password.length < 6) {\n      errorsCheck.password = \"Password must be at least 6 characters long.\";\n    }\n    if (!email) {\n      errorsCheck.email = \"Email is required.\";\n    }\n    if (confirmPassword.length > 0 && confirmPassword.length < 6) {\n      errorsCheck.confirmPassword = \"Password must be at least 6 characters long.\";\n    }\n    if (confirmPassword && confirmPassword.length > 5 && confirmPassword !== password) {\n      errorsCheck.confirmPassword = \"Passwords must be the same.\";\n    }\n    if (Object.keys(errorsCheck).length > 0) {\n      setErrors(errorsCheck);\n    } else {\n      setErrors({});\n    }\n    if (Object.keys(errorsCheck).length === 0) {\n      setModal(true);\n    }\n  };\n  const handleModalSubmit = e => {\n    e.preventDefault();\n    let errorsCheck = {};\n    if (!passwordCheck.length) {\n      errorsCheck.passwordCheck = \"Password is required.\";\n    }\n    if (Object.keys(errorsCheck).length > 0) {\n      setErrors(errorsCheck);\n    } else {\n      setErrors({});\n    }\n    if (Object.keys(errorsCheck).length === 0) {\n      dispatch(updateProfile({\n        id: userInfo._id,\n        name,\n        email,\n        password,\n        image,\n        passwordCheck\n      }));\n      setModal(false);\n    }\n  };\n\n  // upload file\n  const uploadingFileHandler = async e => {\n    //get first element from files which one is the image\n    const file = e.target.files[0];\n    //form instance\n    const formData = new FormData();\n    //add file\n    formData.append(\"image\", file);\n    //start loader\n    setUploading(true);\n    try {\n      //form config\n      const config = {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      };\n      //api call to upload image\n      const {\n        data\n      } = await axios.post(\"/api/upload\", formData, config);\n      //set image path\n      setImage(data);\n      //stop loader\n      setUploading(false);\n    } catch (error) {\n      console.error(error);\n      setUploading(false);\n    }\n  };\n  const imageName = image => {\n    const imageArray = image.split(`uploads`);\n    return imageArray[1];\n  };\n  const renderForm = () => /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      name: \"name\",\n      type: \"text\",\n      data: name,\n      setData: setName,\n      errors: errors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      name: \"email\",\n      type: \"email\",\n      data: email,\n      setData: setEmail,\n      errors: errors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      name: \"password\",\n      type: \"password\",\n      data: password,\n      setData: setPassword,\n      errors: errors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      name: \"confirmPassword\",\n      type: \"password\",\n      data: confirmPassword,\n      setData: setConfirmPassword,\n      errors: errors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FileInput, {\n      fileHandler: uploadingFileHandler,\n      name: \"photo\",\n      image: imageName(image),\n      uploading: uploading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary btn-block\",\n      children: \"Update\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 9\n  }, this);\n  const renderInfo = () => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"profile-user-img img-fluid img-circle\",\n        src: image,\n        alt: \"User profile picture\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"profile-username text-center\",\n      children: userInfo && userInfo.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-muted text-center\",\n      children: userInfo && userInfo.isAdmin ? \"Administrator\" : \"Employee\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n  const renderProfile = () => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(LoaderHandler, {\n      loading: loadingUpdate,\n      error: errorUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 13\n    }, this), renderInfo(), renderForm()]\n  }, void 0, true);\n  const renderModalCheckPassword = () => /*#__PURE__*/_jsxDEV(Modal, {\n    style: modalStyles,\n    isOpen: modal,\n    onRequestClose: () => setModal(false),\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Password check\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"For security reasons, please insert your actual password to confirm changes.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleModalSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        name: \"passwordCheck\",\n        type: \"password\",\n        data: passwordCheck,\n        setData: setPasswordCheck,\n        errors: errors\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalButton, {\n        modal: modal,\n        setModal: setModal,\n        classes: \"btn-danger float-right\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 259,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HeaderContent, {\n      name: \"Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row justify-content-center\",\n          children: [renderModalCheckPassword(), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12 col-md-6\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card card-primary card-outline\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-body box-profile\",\n                children: /*#__PURE__*/_jsxDEV(LoaderHandler, {\n                  loading: loading,\n                  error: error,\n                  loader: /*#__PURE__*/_jsxDEV(DataTableLoader, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 306,\n                    columnNumber: 49\n                  }, this),\n                  render: renderProfile\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(ProfileScreen, \"Woai10PsWDZAxFQNpFDabQx7zxs=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n_c = ProfileScreen;\nexport default ProfileScreen;\nvar _c;\n$RefreshReg$(_c, \"ProfileScreen\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useSelector","Modal","axios","HeaderContent","Input","ModalButton","FileInput","DataTableLoader","LoaderHandler","USER_DETAILS_RESET","USER_LOGOUT","USER_UPDATE_RESET","listUserDetails","login","updateProfile","modalStyles","jsxDEV","_jsxDEV","Fragment","_Fragment","ProfileScreen","history","_s","dispatch","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","passwordCheck","setPasswordCheck","image","setImage","uploading","setUploading","modal","setModal","errors","setErrors","userLogin","state","userInfo","userDetails","loading","error","user","userUpdate","loadingUpdate","errorUpdate","success","successUpdate","localStorage","removeItem","type","push","_id","handleSubmit","e","preventDefault","errorsCheck","length","Object","keys","handleModalSubmit","id","uploadingFileHandler","file","target","files","formData","FormData","append","config","headers","data","post","console","imageName","imageArray","split","renderForm","onSubmit","children","setData","fileName","_jsxFileName","lineNumber","columnNumber","fileHandler","className","renderInfo","src","alt","isAdmin","renderProfile","renderModalCheckPassword","style","isOpen","onRequestClose","classes","loader","render","_c","$RefreshReg$"],"sources":["C:/Users/estra/OneDrive/Escritorio/Hotel/hotel-bar-guacari/frontend/src/screens/user/ProfileScreen.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport axios from \"axios\";\r\n\r\n/* Components */\r\nimport HeaderContent from \"../../components/HeaderContent\";\r\nimport Input from \"../../components/form/Input\";\r\nimport ModalButton from \"../../components/ModalButton\";\r\nimport FileInput from \"../../components/form/FileInput\";\r\nimport DataTableLoader from \"../../components/loader/DataTableLoader\";\r\nimport LoaderHandler from \"../../components/loader/LoaderHandler\";\r\n\r\n/* Constants */\r\nimport {\r\n    USER_DETAILS_RESET,\r\n    USER_LOGOUT,\r\n    USER_UPDATE_RESET,\r\n} from \"../../constants/userConstants\";\r\n\r\n/* Actions */\r\nimport {\r\n    listUserDetails,\r\n    login,\r\n    updateProfile,\r\n} from \"../../actions/userActions\";\r\n\r\n/* Styles */\r\nimport { modalStyles } from \"../../utils/styles\";\r\n\r\nconst ProfileScreen = ({ history }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n    const [passwordCheck, setPasswordCheck] = useState(\"\");\r\n    const [image, setImage] = useState(\"\");\r\n    const [uploading, setUploading] = useState(false);\r\n\r\n    const [modal, setModal] = useState(false);\r\n\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const userLogin = useSelector((state) => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n    //user details state\r\n    const userDetails = useSelector((state) => state.userDetails);\r\n    const { loading, error, user } = userDetails;\r\n\r\n    //user update state\r\n    const userUpdate = useSelector((state) => state.userUpdate);\r\n    const {\r\n        loading: loadingUpdate,\r\n        error: errorUpdate,\r\n        success: successUpdate,\r\n    } = userUpdate;\r\n\r\n    useEffect(() => {\r\n        //after update redirect to users\r\n        if (successUpdate) {\r\n            localStorage.removeItem(\"userInfo\");\r\n            dispatch({ type: USER_UPDATE_RESET });\r\n            dispatch({ type: USER_DETAILS_RESET });\r\n            dispatch({ type: USER_LOGOUT });\r\n            dispatch(login(email, password ? password : passwordCheck));\r\n            history.push(\"/login\");\r\n        }\r\n\r\n        //load product data\r\n        if ((!user || !user.name) && userInfo) {\r\n            dispatch(listUserDetails(userInfo._id));\r\n        } else {\r\n            //set states\r\n            setName(user.name);\r\n            setEmail(user.email);\r\n            setImage(user.image);\r\n        }\r\n    }, [dispatch, history, user, userInfo, successUpdate]);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        let errorsCheck = {};\r\n\r\n        if (!name) {\r\n            errorsCheck.name = \"Name is required.\";\r\n        }\r\n\r\n        if (password.length > 0 && password.length < 6) {\r\n            errorsCheck.password =\r\n                \"Password must be at least 6 characters long.\";\r\n        }\r\n\r\n        if (!email) {\r\n            errorsCheck.email = \"Email is required.\";\r\n        }\r\n\r\n        if (confirmPassword.length > 0 && confirmPassword.length < 6) {\r\n            errorsCheck.confirmPassword =\r\n                \"Password must be at least 6 characters long.\";\r\n        }\r\n\r\n        if (\r\n            confirmPassword &&\r\n            confirmPassword.length > 5 &&\r\n            confirmPassword !== password\r\n        ) {\r\n            errorsCheck.confirmPassword = \"Passwords must be the same.\";\r\n        }\r\n\r\n        if (Object.keys(errorsCheck).length > 0) {\r\n            setErrors(errorsCheck);\r\n        } else {\r\n            setErrors({});\r\n        }\r\n\r\n        if (Object.keys(errorsCheck).length === 0) {\r\n            setModal(true);\r\n        }\r\n    };\r\n\r\n    const handleModalSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        let errorsCheck = {};\r\n\r\n        if (!passwordCheck.length) {\r\n            errorsCheck.passwordCheck = \"Password is required.\";\r\n        }\r\n\r\n        if (Object.keys(errorsCheck).length > 0) {\r\n            setErrors(errorsCheck);\r\n        } else {\r\n            setErrors({});\r\n        }\r\n\r\n        if (Object.keys(errorsCheck).length === 0) {\r\n            dispatch(\r\n                updateProfile({\r\n                    id: userInfo._id,\r\n                    name,\r\n                    email,\r\n                    password,\r\n                    image,\r\n                    passwordCheck,\r\n                })\r\n            );\r\n            setModal(false);\r\n        }\r\n    };\r\n\r\n    // upload file\r\n    const uploadingFileHandler = async (e) => {\r\n        //get first element from files which one is the image\r\n        const file = e.target.files[0];\r\n        //form instance\r\n        const formData = new FormData();\r\n        //add file\r\n        formData.append(\"image\", file);\r\n        //start loader\r\n        setUploading(true);\r\n        try {\r\n            //form config\r\n            const config = {\r\n                headers: {\r\n                    \"Content-Type\": \"multipart/form-data\",\r\n                },\r\n            };\r\n            //api call to upload image\r\n            const { data } = await axios.post(\"/api/upload\", formData, config);\r\n            //set image path\r\n            setImage(data);\r\n            //stop loader\r\n            setUploading(false);\r\n        } catch (error) {\r\n            console.error(error);\r\n            setUploading(false);\r\n        }\r\n    };\r\n\r\n    const imageName = (image) => {\r\n        const imageArray = image.split(`uploads`);\r\n        return imageArray[1];\r\n    };\r\n\r\n    const renderForm = () => (\r\n        <form onSubmit={handleSubmit}>\r\n            <Input\r\n                name={\"name\"}\r\n                type={\"text\"}\r\n                data={name}\r\n                setData={setName}\r\n                errors={errors}\r\n            />\r\n            <Input\r\n                name={\"email\"}\r\n                type={\"email\"}\r\n                data={email}\r\n                setData={setEmail}\r\n                errors={errors}\r\n            />\r\n            <Input\r\n                name={\"password\"}\r\n                type={\"password\"}\r\n                data={password}\r\n                setData={setPassword}\r\n                errors={errors}\r\n            />\r\n            <Input\r\n                name={\"confirmPassword\"}\r\n                type={\"password\"}\r\n                data={confirmPassword}\r\n                setData={setConfirmPassword}\r\n                errors={errors}\r\n            />\r\n            <FileInput\r\n                fileHandler={uploadingFileHandler}\r\n                name={\"photo\"}\r\n                image={imageName(image)}\r\n                uploading={uploading}\r\n            />\r\n            <hr />\r\n            <button type=\"submit\" className=\"btn btn-primary btn-block\">\r\n                Update\r\n            </button>\r\n        </form>\r\n    );\r\n\r\n    const renderInfo = () => (\r\n        <>\r\n            <div className=\"text-center\">\r\n                <img\r\n                    className=\"profile-user-img img-fluid img-circle\"\r\n                    src={image}\r\n                    alt=\"User profile picture\"\r\n                />\r\n            </div>\r\n            <h3 className=\"profile-username text-center\">\r\n                {userInfo && userInfo.name}\r\n            </h3>\r\n            <p className=\"text-muted text-center\">\r\n                {userInfo && userInfo.isAdmin ? \"Administrator\" : \"Employee\"}\r\n            </p>\r\n        </>\r\n    );\r\n\r\n    const renderProfile = () => (\r\n        <>\r\n            <LoaderHandler loading={loadingUpdate} error={errorUpdate} />\r\n            {renderInfo()}\r\n            {renderForm()}\r\n        </>\r\n    );\r\n\r\n    const renderModalCheckPassword = () => (\r\n        <Modal\r\n            style={modalStyles}\r\n            isOpen={modal}\r\n            onRequestClose={() => setModal(false)}\r\n        >\r\n            <h2>Password check</h2>\r\n            <p>\r\n                For security reasons, please insert your actual password to\r\n                confirm changes.\r\n            </p>\r\n            <form onSubmit={handleModalSubmit}>\r\n                <Input\r\n                    name={\"passwordCheck\"}\r\n                    type={\"password\"}\r\n                    data={passwordCheck}\r\n                    setData={setPasswordCheck}\r\n                    errors={errors}\r\n                />\r\n                <hr />\r\n                <button type=\"submit\" className=\"btn btn-primary\">\r\n                    Submit\r\n                </button>\r\n\r\n                <ModalButton\r\n                    modal={modal}\r\n                    setModal={setModal}\r\n                    classes={\"btn-danger float-right\"}\r\n                />\r\n            </form>\r\n        </Modal>\r\n    );\r\n    return (\r\n        <>\r\n            {/* Content Header (Page header) */}\r\n            <HeaderContent name={\"Profile\"} />\r\n            {/* Main content */}\r\n            <section className=\"content\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row justify-content-center\">\r\n                        {renderModalCheckPassword()}\r\n                        <div className=\"col-12 col-md-6\">\r\n                            {/* Profile Image */}\r\n                            <div className=\"card card-primary card-outline\">\r\n                                <div className=\"card-body box-profile\">\r\n                                    <LoaderHandler\r\n                                        loading={loading}\r\n                                        error={error}\r\n                                        loader={<DataTableLoader />}\r\n                                        render={renderProfile}\r\n                                    />\r\n                                </div>\r\n                                {/* /.card-body */}\r\n                            </div>\r\n                            {/* /.card */}\r\n                        </div>\r\n                        {/* /.col */}\r\n                    </div>\r\n                    {/* /.row */}\r\n                </div>\r\n                {/* /.container-fluid */}\r\n            </section>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ProfileScreen;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}