{"ast":null,"code":"import axios from \"axios\";\nimport { CLIENT_LIST_REQUEST, CLIENT_LIST_SUCCESS, CLIENT_LIST_FAIL, CLIENT_CREATE_REQUEST, CLIENT_CREATE_SUCCESS, CLIENT_CREATE_FAIL, CLIENT_DETAILS_REQUEST, CLIENT_DETAILS_SUCCESS, CLIENT_DETAILS_FAIL, CLIENT_UPDATE_REQUEST, CLIENT_UPDATE_SUCCESS, CLIENT_UPDATE_FAIL, CLIENT_DELETE_REQUEST, CLIENT_DELETE_SUCCESS, CLIENT_DELETE_FAIL } from \"../constants/clientConstants\";\n\n//get all clients with pagination\nexport const listClients = (keyword = \"\", pageNumber = \"\") => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: CLIENT_LIST_REQUEST\n    });\n\n    //get user from state\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n\n    //headers\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n\n    //get all clients\n    const {\n      data\n    } = await axios.get(`/api/clients?keyword=${keyword}&pageNumber=${pageNumber}`, config);\n    dispatch({\n      type: CLIENT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: CLIENT_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\n\n//create a client\nexport const createClient = client => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: CLIENT_CREATE_REQUEST\n    });\n\n    //get client from state\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n\n    //headers\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n\n    //create client\n    const {\n      data\n    } = await axios.post(\"/api/clients\", client, config);\n    dispatch({\n      type: CLIENT_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: CLIENT_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\n\n//get client details\nexport const listClientDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: CLIENT_DETAILS_REQUEST\n    });\n\n    //get user from state\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n\n    //headers\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n\n    //api call to get CLIENT\n    const {\n      data\n    } = await axios.get(`/api/clients/${id}`, config);\n    dispatch({\n      type: CLIENT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: CLIENT_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\n\n//update a client\nexport const updateClient = client => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: CLIENT_UPDATE_REQUEST\n    });\n\n    //get user from state\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    //headers\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n\n    //update client\n    const {\n      data\n    } = await axios.put(`/api/clients/${client.id}`, client, config);\n    dispatch({\n      type: CLIENT_UPDATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: CLIENT_UPDATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\n\n//delete client\nexport const deleteClient = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: CLIENT_DELETE_REQUEST\n    });\n\n    //get user from state\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    //headers\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n\n    //api call to delete client\n    await axios.delete(`/api/clients/${id}`, config);\n    dispatch({\n      type: CLIENT_DELETE_SUCCESS\n    });\n  } catch (error) {\n    dispatch({\n      type: CLIENT_DELETE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"names":["axios","CLIENT_LIST_REQUEST","CLIENT_LIST_SUCCESS","CLIENT_LIST_FAIL","CLIENT_CREATE_REQUEST","CLIENT_CREATE_SUCCESS","CLIENT_CREATE_FAIL","CLIENT_DETAILS_REQUEST","CLIENT_DETAILS_SUCCESS","CLIENT_DETAILS_FAIL","CLIENT_UPDATE_REQUEST","CLIENT_UPDATE_SUCCESS","CLIENT_UPDATE_FAIL","CLIENT_DELETE_REQUEST","CLIENT_DELETE_SUCCESS","CLIENT_DELETE_FAIL","listClients","keyword","pageNumber","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","get","payload","error","response","message","createClient","client","post","listClientDetails","id","updateClient","put","deleteClient","delete"],"sources":["C:/Users/estra/OneDrive/Escritorio/Hotel/hotel-bar-guacari/frontend/src/actions/clientActions.js"],"sourcesContent":["import axios from \"axios\";\r\nimport {\r\n    CLIENT_LIST_REQUEST,\r\n    CLIENT_LIST_SUCCESS,\r\n    CLIENT_LIST_FAIL,\r\n    CLIENT_CREATE_REQUEST,\r\n    CLIENT_CREATE_SUCCESS,\r\n    CLIENT_CREATE_FAIL,\r\n    CLIENT_DETAILS_REQUEST,\r\n    CLIENT_DETAILS_SUCCESS,\r\n    CLIENT_DETAILS_FAIL,\r\n    CLIENT_UPDATE_REQUEST,\r\n    CLIENT_UPDATE_SUCCESS,\r\n    CLIENT_UPDATE_FAIL,\r\n    CLIENT_DELETE_REQUEST,\r\n    CLIENT_DELETE_SUCCESS,\r\n    CLIENT_DELETE_FAIL,\r\n} from \"../constants/clientConstants\";\r\n\r\n//get all clients with pagination\r\nexport const listClients =\r\n    (keyword = \"\", pageNumber = \"\") =>\r\n    async (dispatch, getState) => {\r\n        try {\r\n            dispatch({\r\n                type: CLIENT_LIST_REQUEST,\r\n            });\r\n\r\n            //get user from state\r\n            const {\r\n                userLogin: { userInfo },\r\n            } = getState();\r\n\r\n            //headers\r\n            const config = {\r\n                headers: {\r\n                    Authorization: `Bearer ${userInfo.token}`,\r\n                },\r\n            };\r\n\r\n            //get all clients\r\n            const { data } = await axios.get(\r\n                `/api/clients?keyword=${keyword}&pageNumber=${pageNumber}`,\r\n                config\r\n            );\r\n\r\n            dispatch({\r\n                type: CLIENT_LIST_SUCCESS,\r\n                payload: data,\r\n            });\r\n        } catch (error) {\r\n            dispatch({\r\n                type: CLIENT_LIST_FAIL,\r\n                payload:\r\n                    error.response && error.response.data.message\r\n                        ? error.response.data.message\r\n                        : error.message,\r\n            });\r\n        }\r\n    };\r\n\r\n//create a client\r\nexport const createClient = (client) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: CLIENT_CREATE_REQUEST,\r\n        });\r\n\r\n        //get client from state\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState();\r\n\r\n        //headers\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        };\r\n\r\n        //create client\r\n        const { data } = await axios.post(\"/api/clients\", client, config);\r\n        dispatch({\r\n            type: CLIENT_CREATE_SUCCESS,\r\n            payload: data,\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: CLIENT_CREATE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\n//get client details\r\nexport const listClientDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: CLIENT_DETAILS_REQUEST });\r\n\r\n        //get user from state\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState();\r\n\r\n        //headers\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        };\r\n\r\n        //api call to get CLIENT\r\n        const { data } = await axios.get(`/api/clients/${id}`, config);\r\n        dispatch({\r\n            type: CLIENT_DETAILS_SUCCESS,\r\n            payload: data,\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: CLIENT_DETAILS_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\n//update a client\r\nexport const updateClient = (client) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: CLIENT_UPDATE_REQUEST,\r\n        });\r\n\r\n        //get user from state\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState();\r\n        //headers\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        };\r\n\r\n        //update client\r\n        const { data } = await axios.put(\r\n            `/api/clients/${client.id}`,\r\n            client,\r\n            config\r\n        );\r\n        dispatch({\r\n            type: CLIENT_UPDATE_SUCCESS,\r\n            payload: data,\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: CLIENT_UPDATE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\n//delete client\r\nexport const deleteClient = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: CLIENT_DELETE_REQUEST,\r\n        });\r\n\r\n        //get user from state\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState();\r\n        //headers\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        };\r\n\r\n        //api call to delete client\r\n        await axios.delete(`/api/clients/${id}`, config);\r\n        dispatch({\r\n            type: CLIENT_DELETE_SUCCESS,\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: CLIENT_DELETE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}