{"ast":null,"code":"import axios from \"axios\";\nimport { INGREDIENT_LIST_REQUEST, INGREDIENT_LIST_SUCCESS, INGREDIENT_LIST_FAIL, INGREDIENT_CREATE_REQUEST, INGREDIENT_CREATE_SUCCESS, INGREDIENT_CREATE_FAIL, INGREDIENT_DETAILS_REQUEST, INGREDIENT_DETAILS_SUCCESS, INGREDIENT_DETAILS_FAIL, INGREDIENT_UPDATE_REQUEST, INGREDIENT_UPDATE_SUCCESS, INGREDIENT_UPDATE_FAIL, INGREDIENT_DELETE_REQUEST, INGREDIENT_DELETE_SUCCESS, INGREDIENT_DELETE_FAIL } from \"../constants/ingredientConstants\";\n\n//get all ingredients\nexport const listIngredients = (keyword = \"\", pageNumber = \"\") => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: INGREDIENT_LIST_REQUEST\n    });\n\n    //get user from state\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n\n    //headers\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n\n    //get all ingredients\n    const {\n      data\n    } = await axios.get(`/api/ingredients?keyword=${keyword}&pageNumber=${pageNumber}`, config);\n    dispatch({\n      type: INGREDIENT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: INGREDIENT_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\n\n//create a Ingredient\nexport const createIngredient = ingredient => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: INGREDIENT_CREATE_REQUEST\n    });\n\n    //get ingredient from state\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n\n    //headers\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n\n    //create ingredient\n    const {\n      data\n    } = await axios.post(\"/api/ingredients\", ingredient, config);\n    dispatch({\n      type: INGREDIENT_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: INGREDIENT_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\n\n//get ingredient details\nexport const listIngredientDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: INGREDIENT_DETAILS_REQUEST\n    });\n\n    //get user from state\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n\n    //headers\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n\n    //api call to get Ingredient\n    const {\n      data\n    } = await axios.get(`/api/ingredients/${id}`, config);\n    dispatch({\n      type: INGREDIENT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: INGREDIENT_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\n\n//update a ingredient\nexport const updateIngredient = ingredient => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: INGREDIENT_UPDATE_REQUEST\n    });\n\n    //get user from state\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    //headers\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n\n    //update ingredient\n    const {\n      data\n    } = await axios.put(`/api/ingredients/${ingredient.id}`, ingredient, config);\n    dispatch({\n      type: INGREDIENT_UPDATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: INGREDIENT_UPDATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\n\n//delete ingredient\nexport const deleteIngredient = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: INGREDIENT_DELETE_REQUEST\n    });\n\n    //get user from state\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    //headers\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n\n    //api call to delete Ingredient\n    await axios.delete(`/api/ingredients/${id}`, config);\n    dispatch({\n      type: INGREDIENT_DELETE_SUCCESS\n    });\n  } catch (error) {\n    dispatch({\n      type: INGREDIENT_DELETE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"names":["axios","INGREDIENT_LIST_REQUEST","INGREDIENT_LIST_SUCCESS","INGREDIENT_LIST_FAIL","INGREDIENT_CREATE_REQUEST","INGREDIENT_CREATE_SUCCESS","INGREDIENT_CREATE_FAIL","INGREDIENT_DETAILS_REQUEST","INGREDIENT_DETAILS_SUCCESS","INGREDIENT_DETAILS_FAIL","INGREDIENT_UPDATE_REQUEST","INGREDIENT_UPDATE_SUCCESS","INGREDIENT_UPDATE_FAIL","INGREDIENT_DELETE_REQUEST","INGREDIENT_DELETE_SUCCESS","INGREDIENT_DELETE_FAIL","listIngredients","keyword","pageNumber","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","get","payload","error","response","message","createIngredient","ingredient","post","listIngredientDetails","id","updateIngredient","put","deleteIngredient","delete"],"sources":["C:/Users/estra/OneDrive/Escritorio/Hotel/hotel-bar-guacari/frontend/src/actions/ingredientActions.js"],"sourcesContent":["import axios from \"axios\";\r\nimport {\r\n    INGREDIENT_LIST_REQUEST,\r\n    INGREDIENT_LIST_SUCCESS,\r\n    INGREDIENT_LIST_FAIL,\r\n    INGREDIENT_CREATE_REQUEST,\r\n    INGREDIENT_CREATE_SUCCESS,\r\n    INGREDIENT_CREATE_FAIL,\r\n    INGREDIENT_DETAILS_REQUEST,\r\n    INGREDIENT_DETAILS_SUCCESS,\r\n    INGREDIENT_DETAILS_FAIL,\r\n    INGREDIENT_UPDATE_REQUEST,\r\n    INGREDIENT_UPDATE_SUCCESS,\r\n    INGREDIENT_UPDATE_FAIL,\r\n    INGREDIENT_DELETE_REQUEST,\r\n    INGREDIENT_DELETE_SUCCESS,\r\n    INGREDIENT_DELETE_FAIL,\r\n} from \"../constants/ingredientConstants\";\r\n\r\n//get all ingredients\r\nexport const listIngredients = (keyword = \"\", pageNumber = \"\") => async (\r\n    dispatch,\r\n    getState\r\n) => {\r\n    try {\r\n        dispatch({\r\n            type: INGREDIENT_LIST_REQUEST,\r\n        });\r\n\r\n        //get user from state\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState();\r\n\r\n        //headers\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        };\r\n\r\n        //get all ingredients\r\n        const { data } = await axios.get(\r\n            `/api/ingredients?keyword=${keyword}&pageNumber=${pageNumber}`,\r\n            config\r\n        );\r\n\r\n        dispatch({\r\n            type: INGREDIENT_LIST_SUCCESS,\r\n            payload: data,\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: INGREDIENT_LIST_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\n//create a Ingredient\r\nexport const createIngredient = (ingredient) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: INGREDIENT_CREATE_REQUEST,\r\n        });\r\n\r\n        //get ingredient from state\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState();\r\n\r\n        //headers\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        };\r\n\r\n        //create ingredient\r\n        const { data } = await axios.post(\"/api/ingredients\", ingredient, config);\r\n        dispatch({\r\n            type: INGREDIENT_CREATE_SUCCESS,\r\n            payload: data,\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: INGREDIENT_CREATE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\n//get ingredient details\r\nexport const listIngredientDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: INGREDIENT_DETAILS_REQUEST });\r\n\r\n        //get user from state\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState();\r\n\r\n        //headers\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        };\r\n\r\n        //api call to get Ingredient\r\n        const { data } = await axios.get(`/api/ingredients/${id}`, config);\r\n        dispatch({\r\n            type: INGREDIENT_DETAILS_SUCCESS,\r\n            payload: data,\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: INGREDIENT_DETAILS_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\n//update a ingredient\r\nexport const updateIngredient = (ingredient) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: INGREDIENT_UPDATE_REQUEST,\r\n        });\r\n\r\n        //get user from state\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState();\r\n        //headers\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        };\r\n\r\n        //update ingredient\r\n        const { data } = await axios.put(\r\n            `/api/ingredients/${ingredient.id}`,\r\n            ingredient,\r\n            config\r\n        );\r\n        dispatch({\r\n            type: INGREDIENT_UPDATE_SUCCESS,\r\n            payload: data,\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: INGREDIENT_UPDATE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\n//delete ingredient\r\nexport const deleteIngredient = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: INGREDIENT_DELETE_REQUEST,\r\n        });\r\n\r\n        //get user from state\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState();\r\n        //headers\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        };\r\n\r\n        //api call to delete Ingredient\r\n        await axios.delete(`/api/ingredients/${id}`, config);\r\n        dispatch({\r\n            type: INGREDIENT_DELETE_SUCCESS,\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: INGREDIENT_DELETE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}